{"version":3,"sources":["components/history.js","api.js","actions/index.js","components/Quiz.js","components/createQuiz.js","components/renderQuiz.js","components/App.js","reducers/index.js","reducers/quizReducer.js","index.js"],"names":["createHistory","basename","axios","create","baseURL","getQuiz","dispatch","a","api","get","response","type","payload","data","Quiz","renderQuizList","console","log","props","quiz","length","map","el","id","_id","toString","className","title","to","params","testvalue","this","React","Component","connect","state","quizes","CreateQuiz","totalQues","renderInput","input","placeholder","renderTextArea","label","onSubmit","formValues","addQuiz","change","onAddQuestion","setState","i","handleSubmit","Field","name","component","formWrapper","reduxForm","form","question","history","push","post","QuizRender","index","selected","score","renderQuiz","onClick","q","onOptionClick","option1","option2","option3","option4","Scoring","match","Object","entries","constructor","correct","correctOption","choice","optionNumber","ownProps","App","path","exact","combineReducers","reducer","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.677731b5.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory({ basename: '/Quiz-Master' });\n  ","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'http://localhost:3002'\n});","import history from '../components/history';\nimport api from '../api';\n\nexport const addQuiz = (quiz, formValues) => async dispatch => {\n    history.push('/');\n\n    const data = {title: formValues.title, quiz:[...quiz]};\n\n    const response = await api.post('/quizes',data)\n    \n    dispatch({type:'ADD_QUIZ', payload:response.data});\n}\n\nexport const getQuiz = () => async dispatch => {\n    \n    const response = await api.get('/quizes');\n    dispatch({type:'GET_QUIZ', payload:response.data})\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getQuiz } from '../actions';\n\nclass Quiz extends React.Component {\n\n    componentDidMount() {\n        this.props.getQuiz();\n    }\n\n    renderQuizList = () => {\n        console.log(this.props.quiz.length);\n        if(this.props.quiz.length > 0){\n              return  this.props.quiz.map( el => {\n                  const id = el._id.toString();\n                return(\n                    <div className='quiz-list'>\n                        <span className='quiz-list-title'>{el.title}</span> \n                        <Link to={`/quiz/${id}`}  params={{ testvalue: \"hello\" }} className='start-link'>\n                            <button>Start Quiz</button>\n                        </Link>\n                    </div>\n                );\n           });\n        }else{\n            return <div className='list-no-quiz'><h1>No Quiz Found</h1></div>;\n        }\n    }\n\n    render() {\n        console.log(this.props.quiz);\n        return (\n            <div className='quiz'>\n                <div className='heading'>Quiz Master</div>\n                <div className='create-button'>\n                    <h1>Welcome to the Quiz Master App</h1>\n                    <Link to='/create' className='createQuiz'>\n                        <button >Create New Quiz</button>\n                    </Link>\n                </div>\n\n                <div className='quiz-list-box'>\n                    <h1>Quiz List</h1>\n                    {this.renderQuizList()}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return { quiz: state.quizes}\n}\n\nexport default connect(mapStateToProps,\n    {\n        getQuiz\n    })(Quiz);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport {connect} from 'react-redux';\nimport {addQuiz} from '../actions';\n\n\n\nclass CreateQuiz extends React.Component {\n    state ={ totalQues: 0 }\n\n    componentDidMount(){\n        this.setState({totalQues:this.quiz.length });\n    }\n\n   // componentDidUpdate(){\n         \n   // }\n\n    \n    renderInput = ({input, placeholder, type}) => {\n        return(\n            <div className='field'>\n                <input className='text-field' {...input} type={type} placeholder={placeholder} />\n            </div>\n        );\n    }\n\n    renderTextArea = ({input, label }) => {\n        return(\n            <div className='field'>\n                <label className='label'>{label}</label>\n                <textarea className='text-field' {...input} ></textarea>\n            </div>\n        );\n    }\n\n    quiz = []\n\n\n    onSubmit = (formValues) => {\n        //console.log(formValues); \n        this.props.addQuiz(this.quiz, formValues);\n        this.props.change(\"title\", null);\n        \n        \n        \n    }\n\n    onAddQuestion = (formValues) => {\n        //console.log(formValues); \n        \n        this.quiz = [...this.quiz, formValues];\n        console.log(this.quiz);\n        this.setState({totalQues:this.quiz.length });\n        this.props.change(\"question\", null);\n        for(let i =1; i<=4; i++){\n            this.props.change(`option${i}`, null);\n        }\n        this.props.change(\"correctOption\", null);\n        \n    }\n\n    render() {\n        return (\n            <div className='quiz-create'>\n                <span className='heading'>Create Quiz</span>\n\n                <div className='add-question'>\n                    <form className='questions' onSubmit={this.props.handleSubmit(this.onAddQuestion)}>\n                        <Field className ='ques-text' name='question' component={this.renderTextArea} label='Question'/> \n                        <Field className='options' name='option1' component={this.renderInput} type='text' placeholder='First Option' />\n                        <Field className='options' name=\"option2\" component={this.renderInput} type='text' placeholder='Second Option'/>\n                        <Field className='options' name='option3' component={this.renderInput} type='text' placeholder='Third Option'/>\n                        <Field className='options' name='option4' component={this.renderInput} type='text' placeholder='Forth Option'/>\n                        <Field className='options' name='correctOption' component={this.renderInput} type='text' placeholder='Correct Option'/>\n                        <button>Add Question </button>\n                    </form>\n                </div>\n\n                <div className='add-quiz'>\n                    <form className='quiz' onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                        <Field className='title' name='title' component={this.renderInput} placeholder= 'Title of Quiz'/>\n                        <div className='total'>\n                            <span className='total-ques-heading'>Total Questions</span> <br />\n                            <span className='total-ques'>{this.state.totalQues}</span><br />\n                        </div>\n                        <button> Submit Quiz </button>\n                        \n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state)=> {\n    \n    return {question: state.quizes};\n}\n\nconst formWrapper =  reduxForm({ form: 'CreateQuiz' })(CreateQuiz);\n\nexport default connect(mapStateToProps,\n    {\n        addQuiz\n    }\n    )(formWrapper);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getQuiz } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass QuizRender extends React.Component{\n    \n    state = {index: 0, selected: null, score:0, quiz: {}};\n\n    componentDidMount() {\n        this.props.getQuiz();\n        const id = this.props.match.params.id;\n        if(this.props.quizes){\n            this.props.quizes.map( el => {\n                if(el._id.toString() === id.toString()){\n                    console.log(el);\n                    this.setState({ quiz: el});\n                }\n        \n            });\n        }\n    }\n\n    componentDidUpdate(){\n        const id = this.props.match.params.id;\n        if(Object.entries(this.state.quiz).length === 0 && this.state.quiz.constructor === Object){\n            this.props.quizes.map( el => {\n                if(el._id.toString() === id.toString()){\n                    console.log(el);\n                    this.setState({ quiz: el});\n                }\n        \n            });\n        }\n    }\n\n\n    Scoring() {\n        const correct = this.state.quiz.quiz[this.state.index].correctOption;\n        const choice = this.state.selected;\n        if(choice) {\n            if(correct.toString()===choice.toString()) {\n                this.setState({score:this.state.score+1});\n            }\n        }\n        this.setState({selected:null});\n        this.setState({index:this.state.index+1});\n    }\n\n    onOptionClick(optionNumber) {\n        if(this.state.selected===optionNumber) {\n            this.setState({selected:null});\n        } else {\n            this.setState({selected:  optionNumber})\n        }\n    }\n\n    renderQuiz = ()=> {\n        let i = this.state.index;\n        if(i===(-10)) {\n            return (\n                <>\n                    <h1> You have Scored {this.state.score} marks in this Quiz</h1>\n                    <Link to=\"/\">\n                        <button>Get Back to Home</button>\n                    </Link>\n                </>\n            );\n        }\n        if(this.state.quiz.title){\n            if(i>this.state.quiz.quiz.length){\n                i=this.state.quiz.quiz.length-1;\n                this.setState({index:i})\n            }else if(i === this.state.quiz.quiz.length){\n               // i=this.state.quiz.quiz.length-1;\n               // this.setState({index:i})\n                return(\n                    <div className='submit-quiz'>\n                        <h1>You have Completed this Quiz</h1>\n                        <button onClick={()=>this.setState({index:-10})}>Submit Quiz</button>\n                    </div>\n                    \n                );\n            }\n            const q = this.state.quiz.quiz[i];\n                return (\n                    <>\n                        <div className='render-question'>\n                            <h3 className='list-question'>Ques {i+1}:<br /> {q.question}</h3>\n                            <button className={`option-button ${ this.state.selected === 1 ? 'current' : null }`} onClick={()=>this.onOptionClick(1)}>{q.option1}</button>\n                            <button className={`option-button ${ this.state.selected === 2 ? 'current' : null }`} onClick={()=>this.onOptionClick(2)}>{q.option2}</button>\n                            <button className={`option-button ${ this.state.selected === 3 ? 'current' : null }`} onClick={()=>this.onOptionClick(3)}>{q.option3}</button>\n                            <button className={`option-button ${ this.state.selected === 4 ? 'current' : null }`} onClick={()=>this.onOptionClick(4)}>{q.option4}</button>\n                        </div>\n                        <button className='quiz-nav' onClick={()=>this.Scoring()}>{this.state.selected === null? 'Skip & Next' : 'Next'}</button>  \n                    </>\n                );\n        }else return 'loading';\n    }\n    \n    render(){\n        console.log(this.state);\n        return(\n            <div className='quiz-render'>\n                <div className='quiz-title'>{this.state.quiz ? this.state.quiz.title : 'loading'}</div>\n                {this.renderQuiz()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    console.log(ownProps);\n    \n    return {quizes: state.quizes};\n}\n\nexport default connect(mapStateToProps,{\n    getQuiz\n})(QuizRender);","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\n\nimport Quiz from './Quiz';\nimport CreateQuiz from './createQuiz';\nimport QuizRender from './renderQuiz'\nimport history from './history';\n\nimport '../css/createQuiz.css';\nimport '../css/app.css';\nimport '../css/quiz.css';\nimport '../css/renderQuiz.css';\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Router history={history} >\n                    <Route path='/' exact component={ Quiz} />\n                    <Route path='/create' exact component={CreateQuiz} />\n                    <Route path ='/quiz/:id' exact component={QuizRender} />\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;","import {combineReducers} from 'redux';\nimport { reducer } from 'redux-form';\n\nimport {quizReducer} from './quizReducer';\n\nexport default combineReducers({\n    form: reducer,\n    quizes: quizReducer\n});","export const quizReducer = (state=[],action) => {\n    switch(action.type) {\n        case 'ADD_QUIZ':\n            return [...state, action.payload];\n        case 'GET_QUIZ':\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport reduxThunk from 'redux-thunk';\n\nconst store = createStore(reducers,applyMiddleware(reduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}